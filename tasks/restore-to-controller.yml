---
- name: "Prepare ansible's environment"
  block:

  - name: Ensure that this set of tasks are running locally
    assert:
      that: ansible_connection == "local"
      fail_msg: >
        This playbook is intended to be executed in controller machine,
        but is running somewhere else.

        Please refer to the README of this role to see an example of how to use this tasklist.
      success_msg: Connection is local

  - name: Define working path based on current directory
    set_fact:
      work_path: "{{ lookup('env','PWD') }}/backup-restore"

  tags:
  - install
  - restore

- name: Install restic and its environment
  block:

  - name: Ensure working directory exists
    file:
      state: 'directory'
      path: '{{ work_path }}'

  - name: Configure restic
    import_role:
      name: coopdevs.ansible_restic
      tasks_from: preflight.yml

  - name: Install restic using restic-role
    import_role:
      name: coopdevs.ansible_restic
      tasks_from: install.yml
    vars:
    - restic_install_path: "{{ work_path }}"
    become: yes

  - name: Ensure directory for snapshot restore exists at the controller
    file:
      path: "{{ work_path }}"
      state: directory
      mode: 0775

  - name: Render script template that wraps restic with credentials
    template:
      src: 'coopdevs.ansible_restic/templates/restic.helper.j2'
      dest: "{{ work_path }}/restic-{{ backups_role_restic_repo_name }}"
      mode: '0750'
    no_log: true
    with_items: [ "{{ backups_role_restic_repo  }}" ]

  # block "Install restic and its environment"
  tags:
  - install
  - restore

- name: Restore last snapshot and remove secrets
  block:

  - name: Restore last backup for this restic repo
    command: "{{ work_path }}/restic-{{ backups_role_restic_repo_name }} restore latest --target {{ work_path }}/restored"

  - name: Safely delete restic wrapper with secrets
    block:
    - name: "Shred restic's wrapper script to make secrets unrecoverable"
      command: "shred {{ work_path }}/restic-{{ backups_role_restic_repo_name }}"
    - name: Remove already shredded wrapper script
      file:
        path: "{{ work_path }}/restic-{{ backups_role_restic_repo_name }}"
        state: absent

  # block: "Restore last snapshot and remove secrets"
  tags:
  - restore
